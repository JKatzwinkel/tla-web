---

name: deploy

on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 1,15 * *'


jobs:

  docker:
    runs-on: ubuntu-18.04

    steps:

    - uses: "actions/checkout@v3.2.0"

    - name: start backend containers
      run: docker-compose up -d backend populate
      env:
        SAMPLE_URL: http://aaew64.bbaw.de/resources/tla-data/tla-sample-20210115-1000t.tar.gz
        ES_PORT: 9201

    - name: show tla-backend container logs
      run: docker-compose logs backend

    - name: wait for backend to be populated with lemma data
      run: bash .github/scripts/wait_for_response.sh
      env:
        url: http://localhost:8090/lemma/get/100690
        interval: 5
        timeout: 120
      continue-on-error: true

    - name: wait for backend to be populated with meta data
      run: bash .github/scripts/wait_for_response.sh
      env:
        url: http://localhost:8090/version
        interval: 3
        timeout: 60
      continue-on-error: true

    - name: wait for backend to be populated with thesaurus data
      run: bash .github/scripts/wait_for_response.sh
      env:
        url: http://localhost:8090/ths/get/7pupjz
        interval: 3
        timeout: 60

    - name: show tla-ingest container logs
      run: docker-compose logs populate
      if: always()

    - name: query backend endpoint URL paths list
      run: curl -s localhost:8090/

    - name: query backend version info
      run: curl -s localhost:8090/version

    - name: start frontend container
      run: docker-compose up -d frontend
      env:
        ES_PORT: 9201
        BACKEND_PORT: 8090
        LISTEN_PORT: 8080
        FONTAWESOME_VERSION: 5.12.1
        BOOTSTRAP_VERSION: 4.4.1
        JQUERY_VERSION: 3.5.1
        COOKIEJS_VERSION: 2.2.1

    - name: wait for frontend to respond
      run: bash .github/scripts/wait_for_response.sh
      env:
        url: http://localhost:8080
        interval: 2
        timeout: 120

    - name: curl frontend from shell
      run: curl -s localhost:8080/

    - name: run cypress e2e tests
      run: docker-compose up --exit-code-from e2e e2e
      env:
        CYPRESS_BASE_URL: http://localhost:8080
        CYPRESS_VIDEO: false

    - name: upload cypress screenshots
      if: failure()
      uses: "actions/upload-artifact@v3.1.1"
      with:
        path: src/test/e2e/cypress/screenshots
        name: cypress-screenshots

...
