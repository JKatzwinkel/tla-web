plugins {
    id 'war'
    id 'java'
    id 'jacoco'
    id 'application'
    id 'maven-publish'
    id 'co.uzzu.dotenv.gradle' version '1.1.0'
    id 'de.undercouch.download' version '4.0.4'
    id 'org.springframework.boot' version '2.2.7.RELEASE'
    id 'com.github.ben-manes.versions' version '0.28.0'
    id 'com.github.dawnwords.jacoco.badge' version '0.2.0'
}

group = 'org.bbaw.aaew.tla'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext {
    fontawesomeVersion = env.FONTAWESOME_VERSION.orElse('5.12.1')
    bootstrapVersion = env.BOOTSTRAP_VERSION.orElse('4.4.1')
    jqueryVersion = env.JQUERY_VERSION.orElse('3.5.0')
    fontawesomeSrc = "https://use.fontawesome.com/releases/v${fontawesomeVersion}/fontawesome-free-${fontawesomeVersion}-web.zip"
    bootstrapSrc = "https://github.com/twbs/bootstrap/releases/download/v${bootstrapVersion}/bootstrap-${bootstrapVersion}-dist.zip"
    jquerySrc = "https://code.jquery.com/jquery-${jqueryVersion}.min.js"
    staticDir = 'src/main/resources/static'
}

def assets = [
  'jquery': [jquerySrc, 'jquery.min.js'],
  'headroomJs': ['https://unpkg.com/headroom.js/dist/headroom.min.js', 'headroom.min.js']
]

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'tla-web'
            pom {
                name = 'TLA Web Frontend'
                description = 'HTML frontend for the Thesaurus Linguae Aegyptiae web component'
            }
            from components.java
        }
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://www.qenherkhopeshef.org/maven' }
}

configurations {
    // don't embed all the servlet containers 
    implementation.exclude module: 'spring-boot-starter-jetty'
    implementation.exclude module: 'spring-boot-starter-netty'

    testImplementation.exclude group: 'org.junit.vintage'
    testImplementation.exclude module: 'junit-vintage-engine'
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    implementation 'org.modelmapper:modelmapper:2.3.7'

    implementation 'org.springframework.boot:spring-boot-starter-web:2.3.0.M1'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.3.0.M3'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.4.1'
    implementation 'org.slf4j:slf4j-simple:2.0.0-alpha1'

    implementation 'com.github.jkatzwinkel:tla-common:master-SNAPSHOT'
    implementation 'com.github.rosmord:jsesh:7.3.1'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.2.4.RELEASE'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0-M1'
}

application {
    mainClassName = 'tla.web.App'
}

test {
    useJUnitPlatform()
    environment "bootstrapVersion", bootstrapVersion
    environment "fontawesomeVersion", fontawesomeVersion 
    finalizedBy 'jacocoTestReport'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
    finalizedBy 'generateJacocoBadge'
}

task installAssets {
    group = 'Init'
    description = 'Download and install third-party JS/CSS frameworks and libraries'
    dependsOn 'installBootstrap'
    dependsOn 'installFontAwesome'
}

def createDownloadAssetTask(String name, String url, String destFile) {
  return tasks.create("download${name.capitalize()}", Download) {
    doFirst {
      mkdir '${staticDir}/vendor'
    }
    group = 'Init'
    description = "Download && install ${name}"
    src "${url}"
    dest file("${staticDir}/vendor/${destFile}")
  }
}

assets.each{
  entry -> installAssets.dependsOn createDownloadAssetTask(
    entry.key,
    entry.value[0],
    entry.value[1]
  )
}

task downloadFontAwesome(type: Download) {
    group = 'Init'
    description = 'Downloads fontawesome distribution for local hosting'
    src fontawesomeSrc
    dest new File(buildDir, 'fontawesome.zip')
    onlyIfModified true
}

task downloadBootstrap(type: Download) {
    group = 'Init'
    description = 'Downloads bootstrap distribution for local hosting'
    src bootstrapSrc
    dest new File(buildDir, 'bootstrap.zip')
    onlyIfModified true
}

task installFontAwesome(dependsOn: downloadFontAwesome, type: Copy) {
    group = 'Init'
    description = 'Installs fontawesome distribution into assets directory'
    from zipTree(downloadFontAwesome.dest)
    into file("${staticDir}/vendor")
}

task installBootstrap(dependsOn: downloadBootstrap, type: Copy) {
    group = 'Init'
    description = 'Installs bootstrap distribution into assets directory'
    from zipTree(downloadBootstrap.dest)
    into file("${staticDir}/vendor")
}

task cleanAssets(type: Delete) {
    group = 'Init'
    description = 'Delete files added with :installAssets'
    delete "${staticDir}/vendor/"
}

cleanInstallAssets {
    dependsOn 'cleanAssets'
}

clean {
    dependsOn 'cleanAssets'
}

bootJar {
    dependsOn 'installAssets'
}

bootRun {
    environment 'bootstrapVersion', bootstrapVersion
    environment 'fontawesomeVersion', fontawesomeVersion
    systemProperty 'spring.profiles.active', 'dev'
    dependsOn 'installAssets'
}

